---
import { Page, Block, Code, info } from '../../components/DocPage.js';
import { API, Concepts, LearnStores, TypeScript } from '../../components/Links.js';
---

<Page title="Installation">
	<Block>
			<p><strong>{ info.project }</strong> can be used a couple of different ways. If you are using <a href="https://www.npmjs.com/package/corset">npm</a>, there is a package available. { info.project } can also be used via a CDN which works great outside of that workflow.</p>
	</Block>

	<section>
		<h2>With the CDN</h2>
		<Block>	
			<p>{ info.project } is accessible through a CDN at <strong>cdn.corset.dev</strong>. This is the easiest way to get started using it. The following URLs are available:</p>
			<ul>
				<li><strong>{ info.cdnURL }</strong> - This URL is the latest semver-compatible version of { info.project } for the current major version.</li>
				<li><strong>{ info.cdnURLExact }</strong> - This URL is for the latest version of Corset. It's adviced to use this in production.</li>
			</ul>
			<p>The default export is a <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Template_literals#tagged_templates">tagged template function</a> that takes a string of a CSS-like language.</p>

			<Code slot="code" lang="js" code={`
import sheet, { mount } from '${info.cdnURL}';

mount(document, class {
  name = 'Wilbur';

  bind() {
    const { name } = this;
    return sheet\`
      .name {
        --name: \${name};
        text: var(--name);
      }
    \`;
  }
});
`}></Code>
		</Block>
	</section>

	<section>
		<h2>With npm</h2>
		<Block>
			<p>{ info.project } can be installed from <a href="https://www.npmjs.com/package/corset">npm</a> and used with any bundler. Install the <a href="https://www.npmjs.com/package/corset"><strong>{ info.npmPkg }</strong> package</a> on npm and import the default export like so:</p>
			<Code slot="code" lang="js" code={`
import sheet, { mount } from '${info.npmPkg}';`} />
		</Block>
		<h3>Vite</h3>
		<Block>
			<p>{ info.project } uses some advanced features that Vite doesn't support correctly yet. You can configure Vite to work with Corset using these options in your <strong>vite.config.js</strong>:</p>
			<Code slot="code" lang="js" code={`
import { defineConfig } from 'vite';

export default defineConfig({
  build: {
    target: 'esnext',
  },
  optimizeDeps: {
    exclude: ['corset'],
  },
});
`} />
		</Block>
	</section>

	<section>
		<h2>Online Editors</h2>
		<h3>CodePen</h3>
		<Block>
			<p>You can use <a href="https://codepen.io/matthewp/pen/abyqPGw">this CodePen</a> as a starter for testing out ideas or creating demos with { info.project }.</p>
		</Block>
		<h3>StackBlitz</h3>
		<p>This <a href="https://stackblitz.com/edit/vitejs-vite-zvunck">Corset Starter</a> project for <a href="https://stackblitz.com/">StackBlitz</a> is preconfigured and shows example usage.</p>
	</section>

	<section>
		<h2>Further reading</h2>
		<Block>
			<p>Now that you have { info.project } installed, read more about using { info.project }.</p>
			<dl>
			<dt>
				<Concepts titleCase />
			</dt>
			<dd>Learn about the fundamental concepts of { info.project } and what makes it different.</dd>
			<dt>
				<API />
			</dt>
			<dd>Dive straight into the deep end and learn about the API, both on the JavaScript side and the DSL.</dd>
			<dt><TypeScript /></dt>
			<dd>Learn about the best way to take advantage of <a href="https://www.typescriptlang.org/">TypeScript</a> when using { info.project }.</dd>
			<dt><LearnStores /></dt>
			<dd>Learn about stores in { info.project }, a powerful way to share state between your JavaScript and sheet.</dd>
			</dl>
		</Block>
	</section>

	<section>
		<h2 id="demos">Demos</h2>
		<dl>
			<dt><a href="https://codepen.io/matthewp/details/dyZwLaZ">Hello world</a></dt>
			<dd>A hello world with an input that updates a label as the value changes.</dd>
			<dt><a href="https://codepen.io/matthewp/details/abyqPGw">Dark mode toggle</a></dt>
			<dd>Using { info.project } to toggle dark/light mode.</dd>
			<dt><a href="https://codepen.io/matthewp/details/dyVeNrJ">Counter</a></dt>
			<dd>The classic counter demo with increment and decrement.</dd>
			<dt><a href="https://codepen.io/matthewp/details/ZEXpJYr">Todo list</a></dt>
			<dd>Everything you expect from a todo list; add items, remove items, mark some as completed with a completed counter shown.</dd>
			<dt><a href="https://codepen.io/matthewp/details/BamXdLB"><abbr title="Single-page application">SPA</abbr> pattern</a></dt>
			<dd>Demonstrates how you could build a SPA with component-like behaviors.</dd>
			<dt><a href="https://codepen.io/matthewp/details/qBVvZWr">Loading states with fetch()</a><dt>
			<dd>Demonstrates creating a custom function <code>--fetch</code> and using its internal state to show UI while an API request occurs.</dd>
			<dt><a href="https://codepen.io/matthewp/details/QWOPyvQ">XState integration</a></dt>
			<dd>Demonstrates how { info.project } can integrate with other libraries. Let's XState control state transitions with { info.project } reflecting the state in the UI.</dd>
		</dl>
	</section>
</Page>